{"version":3,"sources":["utils/api.js","components/Home.js","components/User.js","components/Users.js","images/user.png","components/Post.js","components/Posts.js","components/Album.js","components/Albums.js","components/Photo.js","components/AlbumPhotos.js","components/PostForm.js","components/NavBar.js","components/App.js","reportWebVitals.js","index.js"],"names":["api","options","getUsers","fetch","baseUrl","headers","then","res","ok","json","Promise","reject","status","getAlbums","getPhotos","getPosts","postMessage","userName","userId","title","body","method","JSON","stringify","this","Home","className","to","User","React","memo","user","adress","address","street","suite","city","zipcode","company","name","catchPhrase","bs","username","email","phone","website","Users","users","useEffect","map","i","id","Post","post","src","userIcon","ownerName","Posts","posts","setPostOwner","getPostsData","Album","album","onAlbumClick","onClick","Albums","albums","setAlbumOwner","getAlbumsData","Photo","photo","url","alt","AlbumPhotos","photos","currentAlbumOwner","useParams","albumPhotos","filter","albumId","PopupForm","onAddPost","useState","setName","messageText","setMessageText","setTitle","onSubmit","e","preventDefault","value","onChange","target","type","placeholder","required","minLength","maxLength","NavBar","exact","activeClassName","App","setUsers","setPosts","setAlbums","setPhotos","setCurrentAlbumOwner","catch","err","console","log","path","PostForm","postData","owner","find","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.65fd983e.chunk.js","sourcesContent":["class Api {\r\n  constructor(options) {\r\n    this.baseUrl = options.baseUrl;\r\n    this.headers = options.headers;\r\n  }\r\n\r\n  getUsers = () => {\r\n\r\n    return fetch(this.baseUrl + \"/users\", { headers: this.headers })\r\n      .then(res => {\r\n        if (res.ok) { return res.json(); }\r\n        return Promise.reject(res.status);\r\n      })\r\n  }\r\n\r\n  getAlbums = () => {\r\n\r\n    return fetch(this.baseUrl + \"/albums\", { headers: this.headers })\r\n      .then(res => {\r\n        if (res.ok) { return res.json(); }\r\n        return Promise.reject(res.status);\r\n      })\r\n  }\r\n\r\n  getPhotos = () => {\r\n\r\n    return fetch(this.baseUrl + \"/photos\", { headers: this.headers })\r\n      .then(res => {\r\n        if (res.ok) { return res.json(); }\r\n        return Promise.reject(res.status);\r\n      })\r\n  }\r\n\r\n  getPosts = () => {\r\n\r\n    return fetch(this.baseUrl + \"/posts\", { headers: this.headers })\r\n      .then(res => {\r\n        if (res.ok) { return res.json(); }\r\n        return Promise.reject(res.status);\r\n      })\r\n  }\r\n\r\n  postMessage = ({userName, userId, title, body}) => {\r\n\r\n    return fetch(this.baseUrl + \"/posts\", {\r\n      method: 'POST',\r\n      headers: this.headers,\r\n      body: JSON.stringify({userName, userId, title, body})\r\n    })\r\n      .then(res => {\r\n        if (res.ok) { return res.json(); }\r\n        return Promise.reject(res.status);\r\n      })\r\n  }\r\n}\r\n\r\nconst userApiOptions = {\r\n  baseUrl: `https://jsonplaceholder.typicode.com`,\r\n  headers: {\r\n    'Content-Type': 'application/json'\r\n  }\r\n};\r\n\r\n//экземпляр класса\r\nconst api = new Api(userApiOptions);\r\n\r\nexport default api;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction Home() {\r\n  return (\r\n    <div className=\"home-container\">\r\n      <h1 className=\"home-container__title\">Приожение для просмотра постов, льбомов и информации о пользователях</h1>\r\n      <Link className=\"button home-container__button\" to=\"/SPA-users-albums-and-posts/users\">Пользователи</Link>\r\n      <Link className=\"button home-container__button\" to=\"/SPA-users-albums-and-posts/posts\">Посты</Link>\r\n      <Link className=\"button home-container__button\" to=\"/SPA-users-albums-and-posts/albums\">Альбомы</Link>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;","import React from 'react';\r\n\r\nconst User = React.memo(({ user }) => {\r\n\r\n  const adress = `${user.address.street}, ${user.address.suite}, ${user.address.city}, ${user.address.zipcode}`\r\n  const company = `${user.company.name} (catchPhrase: ${user.company.catchPhrase}, bs: ${user.company.bs})`\r\n\r\n  return (\r\n    <li className=\"user-item\">\r\n      <p className=\"user-item__text\">\r\n        <span className=\"user-item__text-appellation\">Имя: </span>{user.name}\r\n      </p>\r\n      <p className=\"user-item__text\">\r\n        <span className=\"user-item__text-appellation\">Ник: </span>{user.username}\r\n      </p>\r\n      <p className=\"user-item__text\">\r\n        <span className=\"user-item__text-appellation\">E-mail: </span>{user.email}\r\n      </p>\r\n      <p className=\"user-item__text\">\r\n        <span className=\"user-item__text-appellation\">Адрес: </span>{adress}\r\n      </p>\r\n      <p className=\"user-item__text\">\r\n        <span className=\"user-item__text-appellation\">Номер телефона: </span>{user.phone}\r\n      </p>\r\n      <p className=\"user-item__text\">\r\n        <span className=\"user-item__text-appellation\">Веб-сайт: </span>{user.website}\r\n      </p> \r\n      <p className=\"user-item__text\">\r\n        <span className=\"user-item__text-appellation\">Компания: </span>{company}\r\n      </p>\r\n    </li>\r\n  )\r\n})\r\n\r\nexport default User;","import React from 'react';\r\n\r\nimport User from './User';\r\n\r\nconst Users = React.memo(({ users, getUsers }) => {\r\n\r\n  React.useEffect(() => {\r\n    getUsers();\r\n  }, []);\r\n\r\n  return (\r\n    <ul className='user-list'>\r\n      {users.map((user, i) => { return <User key={user.id} user={user} /> })}\r\n    </ul>\r\n  )\r\n})\r\n\r\nexport default Users; ","export default __webpack_public_path__ + \"static/media/user.28e44cb7.png\";","import React from 'react';\r\n\r\nimport userIcon from '../images/user.png';\r\n\r\nconst Post = React.memo(({ post }) => {\r\n\r\n  return (\r\n    <li className=\"post-item\">\r\n      <div className=\"post-item__title-container\" >\r\n        <img className=\"post-item__user-icon\" src={userIcon} ></img>\r\n        {/* если не задано ownerName используется заданное через форму имя в userName */}\r\n        <h2 className=\"post-item__title\">{post.ownerName || post.userName || ''}</h2>\r\n      </div>\r\n      <p className=\"post-item__message-subject\">{post.title}</p>\r\n      <p className=\"post-item__text\">{post.body}</p>\r\n    </li>\r\n  )\r\n})\r\n\r\nexport default Post;","import React from 'react';\r\n\r\nimport Post from './Post';\r\n\r\nconst Posts = React.memo(({ posts, setPostOwner, getPostsData }) => {\r\n\r\n  React.useEffect(() => {\r\n    getPostsData();\r\n  }, []);\r\n\r\n  return (\r\n    <ul className='user-list'>\r\n      {posts.map((post, i) => {\r\n        setPostOwner(post);\r\n        return <Post key={post.id} post={post} />\r\n      })}\r\n    </ul>\r\n  )\r\n})\r\n\r\nexport default Posts; ","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport userIcon from '../images/user.png';\r\n\r\nfunction Album({ album, onAlbumClick}) {\r\n\r\n  function handleAlbumClick() {\r\n    onAlbumClick(`${album.ownerName}`)\r\n  }\r\n\r\n  return (\r\n    <Link onClick={handleAlbumClick} className=\"albums-item__link\" to={`/SPA-users-albums-and-posts/albums/${album.id}`}>\r\n      <li className=\"albums-item\">\r\n        <div className=\"albums-item__title-container\" >\r\n          <img className=\"albums-item__user-icon\" src={userIcon} ></img>\r\n          <h2 className=\"albums-item__title\">{album.ownerName}</h2>\r\n        </div>\r\n        <p className=\"albums-item__description\">{album.title}</p>\r\n      </li>\r\n    </Link>\r\n  )\r\n}\r\n\r\nexport default Album; ","import React from 'react';\r\n\r\nimport Album from './Album';\r\n\r\nconst Albums = React.memo(({ albums, setAlbumOwner, getAlbumsData , onAlbumClick}) => {\r\n\r\n  React.useEffect(() => {\r\n    getAlbumsData();\r\n  }, []);\r\n\r\n  return (\r\n    <ul className='album-list'>\r\n      {albums.map((album, i) => {\r\n        setAlbumOwner(album);\r\n        return <Album onAlbumClick={onAlbumClick} key={album.id} album={album} />\r\n      })}\r\n    </ul>\r\n  )\r\n})\r\n\r\nexport default Albums; ","import React from 'react';\r\n\r\nconst Photo = React.memo(({photo}) => {\r\n  \r\n  return (\r\n    <li className=\"photo-item\">\r\n      <img className=\"photo-item__img\" src={photo.url} alt='' />\r\n      <p className=\"photo-item__description\" >{photo.title}</p>\r\n    </li>\r\n  )\r\n})\r\n\r\nexport default Photo; \r\n\r\n      // [{\"albumId\": 1,\r\n      // \"id\": 2,\r\n      // \"title\": \"reprehenderit est deserunt velit ipsam\",\r\n      // \"url\": \"https://via.placeholder.com/600/771796\",\r\n      // \"thumbnailUrl\": \"https://via.placeholder.com/150/771796\"}]","import React from 'react';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nimport Photo from './Photo';\r\n\r\nconst AlbumPhotos = React.memo(({photos, getPhotos, currentAlbumOwner}) => {\r\n  \r\n  let { id } = useParams();\r\n\r\n  const albumPhotos = photos.filter(photo => photo.albumId == id);\r\n\r\n  React.useEffect(() => {\r\n    getPhotos();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n    <h2 className=\"section-title\">{currentAlbumOwner}</h2>\r\n    <ul className=\"photo-list\">\r\n      {albumPhotos.map((photo, i) => <Photo key={photo.id} photo={photo}/> )}\r\n    </ul>\r\n    </>\r\n  )\r\n})\r\n\r\nexport default AlbumPhotos; ","import React from 'react';\r\n\r\nfunction PopupForm({ onAddPost }) {\r\n\r\n  const [name, setName] = React.useState('');\r\n  const [messageText, setMessageText] = React.useState('');\r\n  const [title, setTitle] = React.useState('');\r\n\r\n  function handleName(e) {\r\n    setName(e.target.value);\r\n  }\r\n\r\n  function handleMessageText(e) {\r\n    setMessageText(e.target.value);\r\n  }\r\n  function handleTitle(e) {\r\n    setTitle(e.target.value);\r\n  }\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n    // так как нет авторизации в id записано null, имя задается через форму и сохраняется в userName \r\n    onAddPost({\r\n      userName: name,\r\n      userId: null,\r\n      title: title,\r\n      body: messageText,\r\n    });\r\n  }\r\n\r\n  return (\r\n      <form className=\"post-form\" onSubmit={handleSubmit} name='postForm'>\r\n        <input value={name} onChange={handleName} id=\"name\" type=\"text\" name=\"name\"\r\n          className=\"post-form__input\" placeholder=\"Имя\" required minLength=\"2\" maxLength=\"30\" />\r\n        <input value={title} onChange={handleTitle} id=\"title\" type=\"text\" name=\"title\"\r\n          className=\"post-form__input\" placeholder=\"Тема сообщения\" required minLength=\"2\" maxLength=\"30\" />\r\n        <textarea value={messageText} onChange={handleMessageText} id=\"message\" type=\"text\" name=\"message\"\r\n          className=\"post-form__message-input\" placeholder=\"Текст сообщения\" required minLength=\"2\" maxLength=\"1000\" />\r\n        <button className=\"button post-form__button\">Опубликовать</button>\r\n      </form>\r\n  );\r\n}\r\n\r\nexport default PopupForm; ","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nfunction NavBar() {\r\n  return (\r\n    <nav className=\"menu\">\r\n      <ul className=\"menu__list\">\r\n        <li className=\"menu__list-item\">\r\n          <NavLink exact className=\"menu__item\" activeClassName=\"menu__item_active\" to=\"/SPA-users-albums-and-posts/users\">Пользователи</NavLink>\r\n        </li>\r\n        <li className=\"menu__list-item\">\r\n          <NavLink className=\"menu__item\" activeClassName=\"menu__item_active\" to=\"/SPA-users-albums-and-posts/posts\">Посты</NavLink>\r\n        </li>\r\n        <li className=\"menu__list-item\">\r\n          <NavLink className=\"menu__item\" activeClassName=\"menu__item_active\" to=\"/SPA-users-albums-and-posts/albums\">Альбомы</NavLink>\r\n        </li>\r\n      </ul>\r\n\r\n    </nav>\r\n  );\r\n}\r\n\r\nexport default NavBar;","import React from 'react';\nimport { BrowserRouter, Route, Switch, Link } from \"react-router-dom\";\n\nimport api from '../utils/api';\nimport Home from './Home';\nimport Users from './Users';\nimport Posts from './Posts';\nimport Albums from './Albums';\nimport AlbumPhotos from './AlbumPhotos';\nimport PostForm from './PostForm';\nimport NavBar from './NavBar';\n\nfunction App() {\n\n  const [users, setUsers] = React.useState([]);\n  const [posts, setPosts] = React.useState([]);\n  const [albums, setAlbums] = React.useState([]);\n  const [photos, setPhotos] = React.useState([]);\n  const [currentAlbumOwner, setCurrentAlbumOwner] = React.useState(\"\");\n\n  function getUsers() {\n    api.getUsers()\n      .then((res) => { setUsers(res); })\n      .catch((err) => { console.log(`Ошибка: ${err}`); })\n  }\n\n  function getPhotos() {\n    api.getPhotos()\n      .then((res) => { setPhotos(res); })\n      .catch((err) => { console.log(`Ошибка: ${err}`); })\n  }\n\n  function getAlbums() {\n    api.getAlbums()\n      .then((res) => { setAlbums(res); })\n      .catch((err) => { console.log(`Ошибка: ${err}`); })\n  }\n\n  function getPosts() {\n    api.getPosts()\n      .then((res) => { setPosts(res); })\n      .catch((err) => { console.log(`Ошибка: ${err}`); })\n  }\n\n  function handleAddPost(postData) {\n    api.postMessage(postData)\n      .then((res) => { setPosts([...posts, res]); })\n      .catch((err) => { console.log(`Ошибка: ${err}`); })\n  }\n\n  function setAlbumOwner(album) {\n    const owner = users.find((user) => { return user.id === album.userId });\n    if (owner) { album.ownerName = owner.name }\n    else { console.log('имя владельца альбома не найдено'); }\n  }\n\n  function setPostOwner(post) {\n    const owner = users.find((user) => { return user.id === post.userId });\n    if (owner) { post.ownerName = owner.name }\n    else { console.log('имя владельца поста не найдено'); }\n  }\n\n  function getAlbumsData() {\n    getUsers();\n    getAlbums();\n  }\n\n  function getPostsData() {\n    getUsers();\n    getPosts();\n  }\n\n  return (\n    <BrowserRouter>\n      <div className=\"root\">\n        <header className=\"header\">\n          <Link className=\"logo\" to=\"/SPA-users-albums-and-posts/\">SinglePageApplication</Link>\n          <NavBar />\n        </header>\n        <Switch>\n          <Route exact path=\"/SPA-users-albums-and-posts/\">\n            <Home />\n          </Route>\n          <Route path=\"/SPA-users-albums-and-posts/users\">\n            <Users getUsers={getUsers} users={users} />\n          </Route>\n          <Route path=\"/SPA-users-albums-and-posts/posts\">\n            <PostForm onAddPost={handleAddPost} />\n            <Posts getPostsData={getPostsData} setPostOwner={setPostOwner} posts={posts} />\n          </Route>\n          <Route exact path=\"/SPA-users-albums-and-posts/albums\">\n            <Albums onAlbumClick={setCurrentAlbumOwner} getAlbumsData={getAlbumsData} setAlbumOwner={setAlbumOwner} albums={albums} />\n          </Route>\n          <Route exact path=\"/SPA-users-albums-and-posts/albums/:id\">\n            <AlbumPhotos getPhotos={getPhotos} photos={photos} currentAlbumOwner={currentAlbumOwner} />\n          </Route>\n          <Route path=\"*\">\n            <p>Not Found</p>\n          </Route>\n        </Switch>\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}